;; Object gh/gh-gist-api/kongliangzhong
;; EIEIO PERSISTENT OBJECT
(gh-cache "gh/gh-gist-api/kongliangzhong"
  :file "kongliangzhong"
  :version "gh-0.2"
  :entries #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8 data (("/users/kongliangzhong/gists" "GET" "518961b9e53cab492b8a913ae8ba7382d4306545") [object gh-cache-entry "gh-cache-entry" 1435847012.1846 nil ([object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "Code Fragment" 155 "https://gist.githubusercontent.com/kongliangzhong/bd17c400d4481319771f/raw/641c9c73ef454bea9ee9afad687a92e5c0eeee72/Code%20Fragment" "#################################### Java ##################################


################################## Java End ################################"]) t "mostly used code fragment" "2015-07-02T14:22:58Z" "2015-07-02T14:22:59Z" "https://gist.github.com/bd17c400d4481319771f.git" "https://gist.github.com/bd17c400d4481319771f.git" "https://gist.github.com/bd17c400d4481319771f" 0 unbound "bd17c400d4481319771f" "https://api.github.com/gists/bd17c400d4481319771f" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "parallel-computing.txt" 2063 "https://gist.githubusercontent.com/kongliangzhong/f0b806e6099101e6313c/raw/289ddad9c6931bf5151fdf6982c88a87b8ee93ff/parallel-computing.txt" "### Docker ###

1) hello world:
   sudo docker run ubuntu:14.04 /bin/echo \"hello, world!\"

2) interactive:
   sudo docker run -t -i ubuntu:14.04 /bin/bash

3) daemonized hello world:
   sudo docker run -d ubuntu:14.04 /bin/bash -c \"while true; do echo hello world; sleep 1; done\"

   this will return a container id.
   a). sudo docker ps -l : list running containers. with name asigned.
   b). sudo docker logs container_name: show output of daemonized container.
   c). sudo docker stop container_name: stop daemonized container.

4) running a webapp in docker:
   sudo docker run -d -P training/webapp python app.py

   training/webapp is a pre-buildin image. will pulled from remote repository automatically if not found in local place.

   a) port binding: sudo docker port container_name [port_in_docker]
   b) show log continuously: sudo docker logs -f contianer_name
   c) look at container's process id: sudo docker top container_name
   d) inspect container: sudo docker inspect container_name
   e) stop and restart container: sudo docker stop/start container_name
   f) remove container: sudo docker rm container_name

5) docker images:
   a) search image from repository(default Docker Hub): sudo docker search centos

##############


### STORM ###
1) deploy a storm cluster on multi machines:
   a). setup a zookeeper cluster.
   b). start nimbus on master: bin/storm nimbus
   c). start supervisor on each worker machine: bin/storm supervisor
   d). start ui: bin/storm ui

#############


### ZOOKEEPER ###
1) clustered setup:
   a) config zookeeper: the default config file is at conf/zoo.cfg,
      modify zoo.cfg, and add myid file under data path:
      server.n = host:port1:port2
      content of file myid: n

      conf file sample:
        tickTime=2000
        dataDir=/var/lib/zookeeper
        clientPort=2181
        initLimit=5
        syncLimit=2
        server.1=zoo1:2888:3888
        server.2=zoo2:2888:3888
        server.3=zoo3:2888:3888
        
   b) start zookeeper on each machine: bin/zkServer.sh start

#################"]) t "parallel-computing" "2014-12-26T06:41:46Z" "2015-05-25T09:50:48Z" "https://gist.github.com/f0b806e6099101e6313c.git" "https://gist.github.com/f0b806e6099101e6313c.git" "https://gist.github.com/f0b806e6099101e6313c" 0 unbound "f0b806e6099101e6313c" "https://api.github.com/gists/f0b806e6099101e6313c" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "nov" 14 "https://gist.githubusercontent.com/kongliangzhong/9220797b1ce703aa244e/raw/8ed0a1c5350231e8e0c39171b52cc53ea296db95/nov" "神奇巴士

"]) :json-false "gist-novel-scratch" "2013-10-31T04:01:53Z" "2015-08-29T13:53:09Z" "https://gist.github.com/9220797b1ce703aa244e.git" "https://gist.github.com/9220797b1ce703aa244e.git" "https://gist.github.com/9220797b1ce703aa244e" 0 unbound "9220797b1ce703aa244e" "https://api.github.com/gists/9220797b1ce703aa244e" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "J2EE-STUFF.txt" 5290 "https://gist.githubusercontent.com/kongliangzhong/5899183/raw/a32d065a4e7c3b96bb062595fdfec7301db7f73e/J2EE-STUFF.txt" "J2EE STUFF

=== JMX ===

===========

=== MAVEN ===
1. use plugin short name:
  add following content in ~/.m2/settings.xml:
  <profile>
    <pluginGroups>
      <pluginGroup>org.mortbay.jetty</pluginGroup>
  	</pluginGroups>
  </profile>

2. generate project based on sample project:
   cmd: mvn archetype:generate
   then add filter strings.

3. run main class use exec plugin:
   mvn exec:java -Dexec.mainClass=\"cn.klzhong.App\" [-Dexec.args=\"arg1\" ...]

4. download sources of a specific dependency:
   mvn dependency:sources -DincludeGroupIds=javax.validation

5. skip test: mvn isntall -Dmaven.test.skip=true

6: deploy jar to nexus use maven command: e.g.
   mvn deploy:deploy-file -DgroupId=com.lianlian.platform
       -DartifactId=serviceEncryptor
       -Dversion=1.0
       -Dpackaging=jar
       -Dfile=./serviceEncryptor-1.0.jar
       -DrepositoryId=releases
       -Durl=http://192.168.88.8:8081/nexus/content/repositories/releases/

7: run single test(test method):
   mvn -Dtest=TestCircle#xyz test //where TestCircle is the test class name and xyz is the test method
   
------ maven errors: ------
1) can not generate class file in target dir:
   recheck package declare in your source files.

2) annotation error: make sure you have imported the annotation type.

3) Failed to execute goal on project booking-mvc: Could not resolve dependencies for project org.springframework.webflow.samples:booking-mvc:war:1.0.0.BUILD-SNAPSHOT: Failure to find org.springframework.webflow:spring-js-resources:jar:2.4.2.BUILD-20150605.020814-7 in http://192.168.88.8:8081/nexus/content/groups/public was cached in the local repository, resolution will not be reattempted until the update interval of public has elapsed or updates are forced:
    use -U to force update: e.g.  mvn -U tomcat7:run
=============

=== GRADLE ===
1. exclude jars in dependency:
   configurations {
     runtime.exclude group: 'com.sun.jdmk', module: 'jmxtools'
     runtime.exclude group: 'com.sum.jmx', module: 'jmxri'
   }

2. build with error: invalid source release: 1.7
   turns out i set a JAVA_HOME enviroment variable to a JDK1.6 in .bashrc,
   so my gradle1.8 use its jvm, then it can not support java 1.7.
   delete JAVA_HOME env variable, and everything goes fine.

3. run a single unit test:
   gradle -Dtest.single=TEST_CLASS_NAME test

4. gradle help system:
   1) command help: gradle --help
   2) help task: gradle help --task taskName. e.g. gradle help --task help
   3) list tasks: gradle tasks.

5. show dependencies for specific scope:
   gradle dependencies --configure scopeName
   hint: use gradle help --task dependencies for task infomation.

6. skip test: -x test
   e.g. gradle build -x test
==============


==== spring ====
--- spring mvc 
1) If you use Spring 3, you can distinguish between controller methods using params at  tribute:

  <input type = \"submit\" name = \"next\" value = \"Next\" />
  <input type = \"submit\" name = \"back\" value = \"Back\" />

  @RequestMapping(..., params = \"next\")
  public ModelAndView next(...) { ... }

  @RequestMapping(..., params = \"back\")
  public ModelAndView back(...) { ... }
================

==== JBOSS ====
### install jboss-7.1 on ubuntu 13.04 ###
1) download jboss:
   wget http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip
2) unzip:
   sudo unzip jboss-as-7.1.1.Final.zip -d /usr/share/

3) for security reasons, create a new user to run jboss:
   sudo adduser jboss
4) sudo chown -fR jboss.jboss /usr/share/jboss-as-7.1.1.Final/
5) su - jboss
6) add management user:
   cd /usr/share/jboss-as-7.1.1.Final/bin
   ./add-user.sh

===============

==== TOMCAT ====
1. enable ssl for tomcat:
   1) create keystore file: keytool -genkey -alias tomcat -keyalg RSA
   2) Uncomment the \"SSL HTTP/1.1 Connector\" entry in $CATALINA_BASE/conf/server.xml

2. Installing a Certificate from a Certificate Authority：
   1) Create a local Certificate Signing Request (CSR):
      a) Create a local self-signed Certificate:
         keytool -genkey -alias tomcat -keyalg RSA -keystore <your_keystore_filename>
      b) The CSR is then created with:
         keytool -certreq -keyalg RSA -alias tomcat -file certreq.csr -keystore <your_keystore_filename>
   2) Importing the Certificate:
      

3. modify conf/server.xml:
   <Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11Protocol\"
              maxThreads=\"150\" SSLEnabled=\"true\" scheme=\"https\" secure=\"true\"
              clientAuth=\"false\" sslProtocol=\"TLS\" keystoreFile=\"/Users/klzhong/.keystore\"
              keystorePass=\"changeit\" truststoreFile=\"/Users/klzhong/security/cacerts\" />

================

==== CAS SSO ====
1. Generating a certificate:
   1) keytool -delete -alias tomcat -keypass changeit

   2) keytool -genkey -alias tomcat -keypass changeit -keyalg RSA

   3) keytool -export -alias tomcat -keypass changeit  -file server.crt

   4) keytool -import -file server.crt -keypass changeit -keystore $JAVA_HOME/jre/lib/security/cacerts
      -- keytool error: java.lang.Exception: Certificate not imported, alias <mykey> already exists:
         -- delete mykey in cacerts:
         keytool -delete -alias mykey -keystore /Library/Java/JavaVirtualMachines/jdk1.7.0_79.jdk/Contents/Home/jre/lib/security/cacerts

================="]) t "J2EE stuff" "2013-07-01T08:18:00Z" "2015-07-02T14:05:28Z" "https://gist.github.com/5899183.git" "https://gist.github.com/5899183.git" "https://gist.github.com/5899183" 0 unbound "5899183" "https://api.github.com/gists/5899183" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "config.txt" 1467 "https://gist.githubusercontent.com/kongliangzhong/53b02f06fec5230b9799/raw/938404586ad5b06e4ac15e49b07f50c579181d0b/config.txt" "### conf of travelzen work computer:
1) user/pwd:
   jboss/123456
   postgres/123456

2) postgres db users:
   klzhong/123456   db: policy
   postgres/123456  db: postgres

3) hongkong dev/uat/alpha/beta machine ssh user: root/X5355cpu!
4) hongkong redmine account: kongliang.zhong/kongque
5) hongkong flight-admin:
   Username: kongliang.zhong
   password: abc12345
   URL: http://admin-dev.travelzen.com/tz-fare-admin/login.jsp
   IP: 192.168.9.62 

6) deploy fare-admin on dev environment in hongkong:
   use root to login: ssh root@192.168.9.62    password: X5355cpu!

7) hk git server user:
   192.168.9.124
   root/NewPW@09-20
   
   git repo path: /home/gitolite/repositories

8) Travelzen project mangement and wiki: zhongkl/12345678

------------------------------
wifi password:
Travelzen : TzSH2@!2

## about ehr usage:
NOTICE:This is your Login username and password. 
Please access the internet address http://ehr.travelzen.com/Login.aspx to log in.
User name:CSL0372
Password:49DC5019 // change to 'kongque' at 2013/07/18
Please change your password at first time you log in. 

http://ehr.travelzen.com/login.aspx?StaffNo=CSL0372
## ehr usage end.
------------------------------

9) travelzen admin user:  kongliang.zhong/Abc12345  // use in gerrit.

### accounts ###
192.168.241.20: root/tz@0peration
################


########## coinport config ##########
1) mail account: kongliang@coinport.com / Kongque831011

#####################################"]) nil "configuration" "2013-06-19T02:20:09Z" "2014-06-09T04:15:29Z" "https://gist.github.com/53b02f06fec5230b9799.git" "https://gist.github.com/53b02f06fec5230b9799.git" "https://gist.github.com/53b02f06fec5230b9799" 0 unbound "53b02f06fec5230b9799" "https://api.github.com/gists/53b02f06fec5230b9799" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "miscellaneous" 9423 "https://gist.githubusercontent.com/kongliangzhong/5298834/raw/88e33158cc943aadf9038aba30cce9990c9fc44f/miscellaneous" "##### github related #####

---- emacs gist ----
git://github.com/defunkt/gist.el.git
# What's new in 1.0 ?
gist.el now maintains a local cache so as to not go to the gist server every now and then.
multi-files gist support (indicated by a '+' in the gist list)
improved gist-list buffer, based on tabulated-list.el (same codebase as package.el) New keybindings:
g : reload the gist list from server
e : edit current gist description
k : delete current gist
+ : add a file to the current gist
- : remove a file from the current gist
in-place edition. While viewing a gist file buffer, you can:
C-x C-s : save a new version of the gist
C-x C-w : rename some file
dired integration. From a dired buffer, you can:
@ : make a gist out of marked files (with a prefix, make it private)
--------------------

---- git with github ----
## first time init:
1) sudo apt-get install git-core git-doc git-gui
2) ssh-keygen -t rsa -C \"xxxxx...\"
3) git config --global user.name \"xxx\"
4) git config --global user.email \"xxx@xxx\"
5) git config --global github.user \"xxx\"
6) git config --global github.token \"############\"
 
7) git init
8) git add .
9) git commit 
10) git remote add <name> git@github.com:kongliangzhong/<repo-name>.git
11) git push -u <name> master
 
## pull a repository from git to local directory:
1) mkdir proj-name
2) cd proj-name
3) git init
4) git pull https://github.com/twitter/finagle.git

## after init, update files:
0. git add ***
1. git commit -a
2. git push
-------------

##########################

########## GIT ###########
-- git branch and merging:
  --> git branch: list branches.
  --> git branch name : create new branch.
  --> git checkout branchName: switch to branch.
  --> git checkout -b newBranchName: create branch and switch to it.
  --> git merge branchName: merge branch.
  --> git branch -d branchName: delete branch.

-- git fetch , commit, push:
   --> git pull --rebase origin master
   --> git fetch origin master
   --> git fetch && rebase origin/remote-branch-name       
   
-- merge multiple commits as one:
   --> git rebase -i origin/master

-- discade local changes:
   answer 1. git stash save --keep-index
   answer 2. git checkout -- .
   answer 3. git clean -df & git checkout .

-- discade local commit:
   1. if you don't want to keep the changes: git reset --hard HEAD~1
      (same as: git reset --hard HEAD^)
      this will change files to perior state.

   2. cancel last local commit: git reset --soft HEAD~1
      same as git reset HEAD~1

-- restoring lost commit:
   if you did git reset --hard HEAD~1 and you want to restore it:
   step1: git fsck --lost-found
   step2: git reflog 
   step3: git merge b4b8f31 // last is the sha1 of commit shown by reflog 

-- reslove: Pull is not possible because you have unmerged files:
   --> step1: git fetch origin
   --> step2: git reset --hard origin/master

-- commit specific commit:
   step1: use git rebase -i to re-orgnize commit. 
   step2: git push <remote> <commit-sha>:<remote-branch>, will push all the commit before this commit.
       e.g. git push origin 2a770c125abfb4eb26a86ebd342dcc00533f3420:refs/for/master

-- add external difftool meld to git:
   git config --global diff.tool meld
   
##########################

### GitLab ###
1) default install path on ubuntu: /var/opt/gitlab

2) install gitlab on ubuntu12.04:
Download the Omnibus package and install everything:
wget https://downloads-packages.s3.amazonaws.com/ubuntu-12.04/gitlab_7.6.1-omnibus.5.3.0.ci.1-1_amd64.deb
sudo apt-get install openssh-server
sudo apt-get install postfix # Select 'Internet Site', using sendmail instead also works, exim has problems
sudo dpkg -i gitlab_7.6.1-omnibus.5.3.0.ci.1-1_amd64.deb

Configure and start GitLab:
sudo gitlab-ctl reconfigure

Browse to the hostname and login:
Username: root
Password: 5iveL!fe

For troubleshooting and configuration options please see the Omnibus GitLab readme

3) start and stop gitlab service:
   sudo gitlab-ctl start/stop

4) migrate note(from old git repository to gitlab):
   a) clone the old repo onto a dev machine: git clone --mirror git@github.com:me/myrepo.git
   b) create a blank repo on the new gitlab. add user access to the repo.
   c) add the new repo as a remote on the dev machine: cd myrepo.git;  git remote add newRepo git@gitlab.com:me/myrepo.git
   d) push everything back to the new repo: git push --mirror newRepo
   
##############

### openoffice libreoffice calc
  ## combine two columns formula: =A1&\"=\"&B1 // A and B is the column name.	

### install jboss-7.1 on ubuntu 13.04 ###
1) download jboss:
   wget http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.zip
2) unzip:
   sudo unzip jboss-as-7.1.1.Final.zip -d /usr/share/

3) for security reasons, create a new user to run jboss:
   sudo adduser jboss
4) sudo chown -fR jboss.jboss /usr/share/jboss-as-7.1.1.Final/
5) su - jboss
6) add management user:
   cd /usr/share/jboss-as-7.1.1.Final/bin
   ./add-user.sh


### jenkins on ubuntu ###

1) install

2) stop/restart:  sudo /etc/init.d/jenkins stop/restart

#######

### deploy with glu ###
1) prepare: publish war/jar on nexus.

#######################


### linkedin glu 5.5.3 ###

## set up without https:
1) cd /tmp/glu
2) keys setup:  def keys = null  // use http, not https.
3) prepare meta model file.
4) generate distributions:
   $GLU_HOME -D -o ./dists ./glu-meta-model.json.groovy

5) setup distributions. use scipts in dists/bin/install-all.sh
   config scp credentials first: ssh-copy-id user@host

   glu error 1001. connection error.

## setup with keys in tutorial:

1) rm -rf /tmp/glu/* ; cd /tmp/glu
2) generate distributions: // use keys in tutorial. or you can generate your own keys.
   $GLU_HOME/bin/setup.sh -D --keys-root $GLU_HOME/models/tutorial/keys -o ./dists ./glu-meta-model.json.groovy
3) start zookeeper on each host:  cssh host1 host2 ...
   cd GLU_INSTALL_PATH
   ./org.linkedin.zookeeper.../bin/zookeeperctl.sh start
4) config zookeeper:
   cd /tmp/glu
   $GLU_HOME/bin/setup.sh -Z -o ./dists ./glu-meta-model.json.groovy
5) start agent in each host:  cssh ... ; cd ~/glu;  ./bin/agentctl.sh start 
6) test setup so far:
   /<path to outputFolder>/agent-cli/org.linkedin.glu.agent-cli-<version>/bin/agent-cli.sh -s https://<agent host>:12906/ -m /
7) start console:

### errors handle:
1) 1001: communication error:   check all your /etc/hosts files. make sure all agent's computer name and ip are configured in each agent host's /etc/hosts file..

## install glu with generated keys:
1) generate keys: $GLU_HOME/bin/setup.sh -K
   then copy output keys def to meta-model.

2) create meta-model file.
3) generate distributions:
   $GLU_HOME/bin/setup.sh -o ./dist -D <path-to-meta-model-file>

4) install distributions to each agent:
   config scp credentials with: ssh-copy-id user@host
   use dists/bin/install-all.sh to transfer distributions to each host.

5) start zookeeper on each agent:
   <path-glu-install>/<zookeeper-dir>/bin/zookeeperctl.sh start

6) configuring zookeeper cluster:
   $GLU_HOME/bin/setup.sh -o ./dists -Z <path-to-meta-model-file>

7) start glu agents on each agent-host:

8) test setup so for:
   <agent-cli>/bin/agent-cli.sh -s https://<agent-host>/:12906 -m /

9) start the console, and login. default user/password: admin/admin

##########################

### ZOOKEEPER ###

1) connect to zookeeper use zkClient.sh:


#################

### SSH RELATED ###
1) manage multi ssh keys in .ssh:
   specify ssh identity file in .ssh/config file. for example:
   Host  git.unionpaysmart.com          
      Hostname        git.unionpaysmart.com
      IdentityFile    ~/.ssh/upsmart_rsa
      IdentitiesOnly  yes

###################


###### PKI/SSL ######
## create openssl keys:
  1) mkdir -p pki/keys; cd pki/keys
  2) openssl req -new -newkey rsa:1024 -nodes -out ca.csr -keyout ca.key
  3) openssl x509 -trustout -signkey ca.key -days 1825 -req -in ca.csr -out ca.pem
  4) echo \"02\" > ca.srl

## Create a server certificate and keystore:
  1) keytool -genkey -dname \"cn=zhongkl\" -alias emo -keyalg RSA -keystore $EMO_DIR/emokeystore -keypass 123456 -storepass 123456
  2) keytool -import -keystore $EMO_DIR/emokeystore -file ca.pem -alias selfca

  3) config tomcat to support ssl:
     <Connector port=\"8443\" maxHttpHeaderSize=\"8192\"
        maxThreads=\"150\" minSpareThreads=\"25\" maxSpareThreads=\"75\"
        enableLookups=\"false\" disableUploadTimeout=\"true\"
        acceptCount=\"100\" scheme=\"https\" secure=\"true\"
        clientAuth=\"false\" sslProtocol=\"TLS\"

        keystoreFile=\"$EMO_DIR/emokeystore\"
        truststoreFile=\"$EMO_DIR/emokeystore\"
        keystorePass=\"$PASS\"
        truststorePass=\"$PASS\"
        keyAlias=\"emo\"
      />
    startup tomcat, and https should work fine.
## Set Up Client Authentication:
    change tomcat conf/server.xml:  clientAuth=\"true\"
    restart tomcat. https not work. that is fine.
  1)  openssl req -new -newkey rsa:1024 -nodes -out client1.req -keyout client1.key -subj '/C=US/ST=California/CN=emoclient/EMAILADDRESS=myexpressoemail@mymailhost.com'
  2) openssl x509 -CA ca.pem -CAkey ca.key -CAserial ca.srl -req -in client1.req -out client1.pem
  3) openssl pkcs12 -export -in client1.pem -inkey client1.key -out client1.p12 -name \"Sample Client Cert\"
  4) copy file client1.p12 to client, and import to browser.
  now tomcat start page in SSL should work fine.
    
#####################"]) t "miscellaneous" "2013-04-03T06:13:52Z" "2015-05-21T07:50:59Z" "https://gist.github.com/5298834.git" "https://gist.github.com/5298834.git" "https://gist.github.com/5298834" 0 unbound "5298834" "https://api.github.com/gists/5298834" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "work-log" 15296 "https://gist.githubusercontent.com/kongliangzhong/93da96ea0513f11ef9c3/raw/b9e4868bb46d57d3820e222798894f607060e642/work-log" "worklog kongliangzhong
 
2012/3/8
  1) read comitium code
  2) write some experimental code on twitter/ostrich
 
2012/3/21
  1) write some test code on scala-redis client.
  2) backup emacs config to github.
  //TODO: review刷数据改进：对于titile相同的topic_ids, 只保留num_followers最大的那一个topic_id。
 
2012/5/23
  mongomonitor bug list:
  1) can not delete docs on collection after detect.
  2) drop collection mongomonitor , if exist, while execute shardMonitorColl.sh.
  3) get primary only once. cache the result.
  4) add config changed detect.
 
2012/6/12
  thrift connection pool impl:
 
2012/6/27
  1) pre-research: liftray 
  2) wj portal platform architecture
 
2012/07/05
  1) build liferay developement environment.
     maven 
     create a portalet
     deploy portalet


Todo list: 
 
2012/8/8
contiune study on pluto, check if it supports the following features:
  1) support spring mvn portlet.
  2) front page go into the portlet page, navigation.
  3) use portlet in portlet project. and page layout. 

2012/5/23 todo-list
1) merge mailer2 to newest version. and cl by xichen.
2) mongomonitor bugfix and add negios notification.

2012/5/24
check comitium stats: yr/java/shared_deploy_scripts/misc/check_servers.sh

2012/6/6
Search interface:

GeneralServlet RPC:
indexing/proto/general_servlet_rpc.thrift

MergedDoc:
indexing/proto/mergeddoc.thrift

Attachment:
indexing/proto/attachment.proto

Building interface:
indexing/building/interface/
attachment_processor.h
doc_building_processor.h

Retrieval interface:
indexing/retrieval/interface/

Snippet serving interface:
indexing/serving/interface/

新办公地址：
北京市海淀区北三环西路43号5区21A楼，国际研发中心3层。

trunk https://sourcer/svn/yr/trunk/
merge指定的cl serving_20120412/yr$ svn merge -c 81341,81671,81673 https://sourcer/svn/yr/trunk/
merge到最新版本 path_to_server$ svn merge https://sourcer/svn/yr/trunk/path/to/server
svn log -l 10
send email: yunyun_prod@yunrang.com, jianma@yunrang.com

手工merge:
1) svn up under trunk
2) meld branch and trunk, merge maually

2012/06/11
todo-list: 
1) thriftclient(thread pool support) implement
2) 代码重写和重构
3) 门户基础架构。

merge and push comitium: 
cl: 87878,88691
1) /usr/local/kongliangzhong/branches/yr$ svn merge -c 87878,88691 https://sourcer/svn/yr/trunk
2) COMPILE AND RUN TESTS: /usr/local/kongliangzhong/branches/yr$ svn merge -c 87878,88691 https://sourcer/svn/yr/trunk

test java thrift rpc call. 
check if the java thrift api use the connection pool or not.

restart service maually on yy_servers: 
1) sudo -u yrservice bin/yy_prod.sh restart

## 2013/04/26 TODO list:
1) write some sample code in clojure.
2) figure out how to write android applications with emacs and terminal commands.
3) try write android apps in clojure.

## 2013/05/16 TODO list:
1) add rpc interface in snowflake, for delete recommendation document in userDocList.
2) add rpc interface in snowflake, update user's merged-subscription list when user unsubscribed a topic.


#########################################################################

       worklog in travelzen. from 2013-06-03

#########################################################################

## 2013/06/03 
-- TODO:
    -> 完成文件价前端录入页面
    -> 熟悉业务
    -> 熟悉香港代码
    -> 后期会有爬虫抓取页面的需求

-- summarize:
  -> 会议讨论今后工作。
  -> 环境准备
  -> 入职事项

## 2013/06/04
-- TODO:
    -> read code in path travelzen_git/Flight/fare-admin, run it in tomcat/jetty.

## 2013/06/21
-- get source files with dependency jars. by maven/gradle command.
   mvn dependency:sources -DincludeGroupIds=javax.validation

-- use postgres db in herbinate.

-- consider return boolean or void in a dao interface when create a new record in db.
  the answer should be void. 
  check for exceptions to signal when something went wrong.
  see :
  http://stackoverflow.com/questions/2156033/returning-boolean-instead-of-declaring-a-void-type-in-java

## 2013/06/22
-- emacs column edit:
   Rectangle Commands

   Kill a rectangle: kill-rectangle ‘C-x r k’
   Yank the last rectangle killing: yank-rectangle ‘C-x r y’
   Insert a text rectangle: insert-rectangle ‘C-x r t’
   Delete the selected rectangle: delete-rectangle ‘C-x r d’
   Insert a whitespace rectangle into the region: open-rectangle ‘C-x r o’
   Number lines in rectangle: number-to-register ‘C-x r N’. This command also inserts a column of spaces after numbers.  

-- persistence.xml for postgres 9.1.
   <?xml version=\"1.0\" encoding=\"UTF-8\"?>
   <persistence xmlns=\"http://java.sun.com/xml/ns/persistence\"
       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"
       xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence
         http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd\"
       version=\"1.0\">
   
       <persistence-unit name=\"policy\" transaction-type=\"JTA\">
           <properties>
               <property name=\"javax.persistence.jdbc.driver\" value=\"org.postgresql.Driver\" />
               <property name=\"javax.persistence.jdbc.url\" value=\"jdbc:postgresql://localhost:5432/policy\" />
               <property name=\"javax.persistence.jdbc.user\" value=\"postgres\" />
               <property name=\"javax.persistence.jdbc.password\" value=\"123456\" />
   
               <property name=\"hibernate.hbm2ddl.auto\" value=\"create-drop\" />
               <property name=\"hibernate.show_sql\" value=\"true\" />
               <property name=\"hibernate.transaction.flush_before_completion\"
                   value=\"true\" />
               <property name=\"hibernate.cache.provider_class\" value=\"org.hibernate.cache.HashtableCacheProvider\" />
           </properties>
       </persistence-unit>
   
   </persistence>

-- can not get postgres connection. probably because of the user authority issues.
   try to add user klzhong to postgres admin user.

-- postgres add user:
   su - postgres
   psql
   \\c template1
   grant all privileges on database policy to klzhong;
   create user klzhong with password '123456';        
   \\q

## postgres sql:
   \\list  //list databases
   \\dt    //list tables in current db.
   \\c db-name  // connect to a certain db.

   \\?   //help

## 2013/06/24
-- spring form

-- spring validation: trim spaces before validate?

## 2013/06/25
-- study spring java config:
   https://github.com/SpringSource/spring-framework-issues/tree/master/SPR-0000-war-java
   http://rstoyanchev.github.io/spring-mvc-31-indepth

   https://github.com/rstoyanchev/spring-mvc-31-demo       
   https://github.com/SpringSource/spring-mvc-showcase        

   https://github.com/SpringSource/spring-test-mvc

## 2013/06/26
-- localize spring validation message:
-- date-picker. use jquery-ui   

## 2013/06/28
-- rename policyfare to paperfare. Policy.java to PaperFare.java
-- add hibernate ScriptAssert validation.
-- provide interface for paperfare search via thrift.
-- migerate from maven to gradle.

## 2013/07/02
-- TODO:
   1) read code in travelzen.git(hongkong)
   2) think about the archetecture of flightfare system.
   3) write some experimental code on j2ee.

-- xstream
   @XStreamAlias

## 2013/07/02
-- java mvn compile: \"incompatible types\" Error:
   at last found that the default source-compitable level of my maven is 1.5,
   so when it works with generic types, will buggy.
   config source-compatible level to 1.5 and problem resolved.

-- soap:
  -- import ws interface and implement.
   wsimport -keep http://localhost:9999/ws/hello?wsdl

  -- soap request body:   
   <?xml version=\"1.0\" ?>
   <S:Envelope xmlns:S=\"http://schemas.xmlsoap.org/soap/envelope/\">
      <S:Body>
         <ns2:getHelloWorldAsString xmlns:ns2=\"http://ws.klzhong.cn/\">
            <arg0>klzhong</arg0>
         </ns2:getHelloWorldAsString>
      </S:Body>
   </S:Envelope>

  -- document/literal:
   wsgen -keep -cp . cn.klzhong.ws.HelloWorldImpl        

## 2013/07/15
-- deploy fare-admin on dev environment in hongkong:
   use root to login: ssh root@192.168.9.62    password: X5355cpu!

## 2013/07/17
-- TODO
   1）完善文件价的系统，和王亮以及止戈讨论文件价查询接口。 

-- download gist in sh-repo. scp my gist private key and locate it in ~/.ssh.
-- setting a custom umask for guest user:
   add this line in /etc/launchd-user.conf
   umask 002  // 775 when create new file.

-- set locale for mac because of git and maven warnings:

-- add exclude in gradle build file. for paperfare project, gradle build does not work yet. try to make it work.
  -- dependency tree in maven:
    mvn dependency:tree
  -- dependency tree in gradle:
    gradle -q dependencies --configuration compile

## use brew instead of port to install postgresql:
-- install brew first:
   sudo su
   curl -L http://github.com/mxcl/homebrew/tarball/master | tar xz --strip 1 -C /usr/local

   --> brew can not work with macport installed. uninstall all soft ware that installed by macport and remove macport.
   -- show installed software in macport: 
     port installed
	 
   -- remove all software installed by macports:
     sudo port -f uninstall installed
   -- remove macport files:

   ==> install postgresql with brew success.
       for help , use command: brew info postgres     

## share files with google drive: done.

## 2013/07/18
--> install neo4j and run examples for neo4j.
--> install yasnippet in macos emacs24.3:
    --> package-install yasnippet-bundle
        package-inatll yasnippet

    -->package-install auto-complete

** emacs xml comment-region: C-M-;

--> read neo4j manual.
==> run neo4j sample project.

==> slove problem for emacs-gist saving. 
    error message:
    Opening TLS connection with `gnutls-cli --insecure -p 443 api.github.com'...failed
    seems gnutls not installed on mac. so install gnutls on mac:
    brew search gnutls
    sudo brew install gnutls
    
    done.

==> maven mojo plugin usage: maven old java object. for custom plugin implement.
==> maven plugin: appassembler-maven-plugin:
    

## find out changes for some commits in hongkong git repo:
   --> git show remote url:
       git config --get remote.origin.url
       or: git remote show origin
   --> git log | grep \"#nnn\" // search comment
   --> git diff ver1 ver2

** ubuntu enable scp:
   sudo apt-get install openssh-server
   ps -ef|grep sshd

## register a account in vmware: kongliangzhong@gmail.com/kongque

### 2013/07/23
-- TODO:
   --> write some experimental code on neo4j.
   --> design a data server skeleton. store data in neo4j.
   --> findout the design guideline and best practice for neo4j.
   --> for project paperfare, migrate from postgresql to neo4j. can use postgresql
   as a logger db, and save raw data in it.
   

### 2013/07/28
-- decide the database to use: neo4j|mongodb|postgres


### 2013/07/29
-- start postgresql on mac montain lion:
   --> sudo rm -rf /usr/local/var/postgres  // rm if exist.
       sudo mkdir /usr/local/var/postgres
       sudo chown klzhong /usr/local/var/postgres
       initdb /usr/local/var/postgres -E utf8
   --> pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

-- problem when run psql connect to postgresql server: 
   psql: could not connect to server: No such file or directory
   Is the server running locally and accepting
   connections on Unix domain socket \"/var/pgsql_socket/.s.PGSQL.5432\"?       
   --> resolve:
       pg_ctl -D /usr/local/var/postgres stop
       sudo mkdir /var/pg_socket
       sudo chown klzhong /var/pg_socket
       modify /usr/local/var/postgres/postgresql.conf:
              unix_socket_directory = '/var/pgsql_socket'
       pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

   ==> use: psql postgres  connect to postgresql server.

### 2013/08/02
-- design freight search interface.

### 2013/08/09
-- TODO:
   --> paperfare export from hk fare-admin system db.
   --> study lucene and elasticsearch

### 2013/08/22
-- TODO:(next two weeks.)
   --> complete datacollect project for export data from fare-admin to mongodb.
   --> implement fare service interfaces.

-- git: show repository info:
   --> git remote show origin
   --> git remote -v
   --> git config --get remote.origin.url
   --> git config -l
   --> git ls-remote --get-url


### 2014/12/24 move to unionpaysmart.com

### 2014-12-31
-- TODO:
   --> setup an nexus repository on my ubuntu pc
   --> publish plain webapp to nexus
   --> deploy this webapp to multi-nodes use glu.
   --> provide start/stop/restart button in glu console
   --> privide monitor logs.

### 2015-01-07
-- TODO:
   --> scp config credentials on multi machines.
       same as set up password-less ssh login:
       ssh-copy-id  user@host, and password input will prompted.
       this assumes you already has ssh key pairs under ~/.ssh. if not, use ssh-keygen to generate one.

   --> glu zookeeperctl.sh can not find java command automatically. find a way to config JAVA_HOME in meta-model.

   --> understand keystore/truststore mechanism.
   --> disable https and use http for test in this case.

### 2015-01-15
-- TODO
   --> service-kurast refactory:
   1) task-schedule use JDK ScheduledThreadPoolExecutor.
   2) RuleManager implemented as thrift service
   3) add test
   4) add metrics loggers.
   5) deploy use glu.
   6) render metrics info to graph.

### 2015-07-21
-- gem install bundler
   ERROR:  While executing gem ... (URI::InvalidURIError)
        the scheme http does not accept registry part: zkl_1011 (or bad hostname?)
   @see http://ruby.taobao.org/ , and change sources for gem.

### 2015-07-22
-- Hadoop cluster setup:
   1) 环境准备：192.168.0.10(test1), 192.168.0.20(test2), 192.168.0.30(test3), 安装好java，设置好JAVA_HOME.
   2) scp 将hadoop文件传输到各个机器上。安装目录为/home/test/hadoop
   3) configure HADOOP_PREFIX in /etc/profile.d/hadoop.sh :
      HADOOP_PREFIX=/home/upsmart/software/hadoop-2.7.1
      export HADOOP_PREFIX
   4) config hadoop daemons:
      * etc/hadoop/core-site.xml:
        <configuration>
          <property>
            <name>fs.defaultFS</name>
            <value>hdfs://localhost:9000</value>
          </property>
        </configuration>

      * etc/hadoop/hdfs-site.xml:
        <configuration>
            <property>
                <name>dfs.replication</name>
                <value>1</value>
            </property>
        </configuration>
    
      * etc/hadoop/yarn-site.xml
      * etc/hadoop/mapred-site.xml
    5) operating the hadoop cluster:
     * start up HDFS:
       a) format a new distributed filesystem as hdfs:
         $HADOOP_PREFIX/bin/hdfs namenode -format <cluster_name>
       b) start hdfs namenode: (这里$HADOOP_CONF_DIR=$HADOOP_PREFIX/etc/hadoop)
         $HADOOP_PREFIX/sbin/hadoop-daemon.sh --config $HADOOP_CONF_DIR --script hdfs start namenode
         // check with: ps -ef | grep namenode, and will see a proccess has started.
       c) start hdfs datanode:
         $HADOOP_PREFIX/sbin/hadoop-daemons.sh --config $HADOOP_CONF_DIR --script hdfs start datanode


### 2015-08-20
1) protobuf sample finish and rewrite your own.

    
2) go revel frontend for third-party-data.    "]) :json-false "work log" "2013-03-27T03:03:38Z" "2015-01-15T07:03:37Z" "https://gist.github.com/93da96ea0513f11ef9c3.git" "https://gist.github.com/93da96ea0513f11ef9c3.git" "https://gist.github.com/93da96ea0513f11ef9c3" 0 unbound "93da96ea0513f11ef9c3" "https://api.github.com/gists/93da96ea0513f11ef9c3" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "db-stuff" 9335 "https://gist.githubusercontent.com/kongliangzhong/5251230/raw/5ff097dbbb94223b9ebb05bad62b9b7c58935c24/db-stuff" "############### mongodb: ################
1) not master and slaveok=false
在写多读少的应用中，使用Replica Sets来实现读写分离。通过在连接时指定或者在主库指定slaveOk，由Secondary来分担读的压力，Primary只承担写操作。
对于replica set 中的secondary 节点默认是不可读的，
[mongodb@rac4 bin]$ mongo 127.0.0.1:28019
MongoDB shell version: 2.0.1
connecting to: 127.0.0.1:28019/test
SECONDARY> 
SECONDARY> 
SECONDARY> db.yql.find()
error: { \"$err\" : \"not master and slaveok=false\", \"code\" : 13435 }
SECONDARY> db.getMongo()
connection to 127.0.0.1:28019
SECONDARY> db.getMongo().setSlaveOk();
not master and slaveok=false
 
在主库上设置 slaveok=ok
[mongodb@rac4 bin]$ mongo 127.0.0.1:28018
MongoDB shell version: 2.0.1
connecting to: 127.0.0.1:28019/test
PRIMARY> db.getMongo().setSlaveOk();
PRIMARY> 
在备库进行测试
SECONDARY> db.yql.find()
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000000\"), \"age\" : 29, \"id\" : 0, \"name\" : \"2\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000001\"), \"age\" : 77, \"id\" : 1, \"name\" : \"h5gfx6r6sz\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000002\"), \"age\" : 12, \"id\" : 2, \"name\" : \"lmj7w6uqanvntaco\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000003\"), \"age\" : 56, \"id\" : 3, \"name\" : \"1ifd3bmzguuv\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000004\"), \"age\" : 33, \"id\" : 4, \"name\" : \"ba0hchjhi2c16\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000005\"), \"age\" : 70, \"id\" : 5, \"name\" : \"fe6su2p3t2gdckt\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000006\"), \"age\" : 57, \"id\" : 6, \"name\" : \"cq\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000007\"), \"age\" : 75, \"id\" : 7, \"name\" : \"0j43jsovjmyvct\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000008\"), \"age\" : 60, \"id\" : 8, \"name\" : \"eusg4aa5a6ke64zf5ye7\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000009\"), \"age\" : 40, \"id\" : 9, \"name\" : \"iwzcrdjcpoc8f\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a000000a\"), \"age\" : 59, \"id\" : 10, \"name\" : \"er3iemdl\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a000000b\"), \"age\" : 18, \"id\" : 11, \"name\" : \"dnvz0u\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a000000c\"), \"age\" : 5, \"id\" : 12, \"name\" : \"n6ac2ad58fk88if02s\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a000000d\"), \"age\" : 4, \"id\" : 13, \"name\" : \"mob61x3oj0us\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a000000e\"), \"age\" : 32, \"id\" : 14, \"name\" : \"1ylc0\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a000000f\"), \"age\" : 18, \"id\" : 15, \"name\" : \"nbl9r0dnd0vmi\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000010\"), \"age\" : 114, \"id\" : 16, \"name\" : \"gfzc02j7npkv25\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000011\"), \"age\" : 34, \"id\" : 17, \"name\" : \"ac8kfl8\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000012\"), \"age\" : 9, \"id\" : 18, \"name\" : \"wtpqii0dh\" }
{ \"_id\" : ObjectId(\"4eb68b1540643e10a0000013\"), \"age\" : 81, \"id\" : 19, \"name\" : \"xi7r4ej\" }
has more
这样就可以实现读写分离操作了。

关于slaveOk:
slaveOk 基本上可以说是mongodb连接的一个属性。 在mongoConnection或com.mongodb.DB中设置了slaveOk,表示允许当前的连接从replset的secondary读取数据。似乎和mongodb replset的本身属性没有什么关联。

db.doc.update({\"_id\" : \"362061268477948\"}, {\"$set\" : {\"v\" : 1}})
getFile(): bad file number value (corrupt db?): run repair
当在我的机器连另一台机器上的mongod， 执行update时出现此错误。应该是没有权限导致的。

2) mongodb backup and restore:
   mongodump --port p --db dbName --collection collName --out destDir
   mongorestore --port p   dumpDir

### mongodb aggregate:
> db.totalInterfaceAccessAmount_raw.aggregate(
  [
    {$project: {\"account\": 1, \"value\": 1}},
    {$group: {_id: \"$account\", group_val: {$sum: \"$value\"}}},
    {\"$sort\": {\"group_val\": 1}}
    ]
  );

######################################### 


################# mysql #################
 
1) 安装MySQL
sudo apt-get install mysql-server
 
2) 配置MySQL
注意，在Ubuntu下MySQL缺省是只允许本地访问的，如果你要其他机器也能够访问的话，那么需要改变/etc/mysql/my.cnf配置文件了！下面我们一步步地来：
默认的MySQL安装之后根用户是没有密码的，所以首先用根用户进入：
$mysql -u root
在这里之所以用-u root是因为我现在是一般用户（firehare），如果不加-u root的话，mysql会以为是firehare在登录。注意，我在这里没有进入根用户模式，因为没必要。一般来说，对mysql中的数据库进行操作，根本没必要进入根用户模式，只有在设置时才有这种可能。
进入mysql之后，最要紧的就是要设置Mysql中的root用户密码了，否则，Mysql服务无安全可言了。
mysql> GRANT ALL PRIVILEGES ON *.* TO root@localhost IDENTIFIED BY \"123456\";
这样的话，就设置好了MySQL中的root用户密码了，然后就用root用户建立你所需要的数据库。我这里就以xoops为例：
mysql>CREATE DATABASE xoops；
mysql>GRANT ALL PRIVILEGES ON xoops.* TO xoops_root@localhost IDENTIFIED BY \"654321\";
这样就建立了一个xoops_roots的用户，它对数据库xoops有着全部权限。以后就用xoops_root来对xoops数据库进行管理，而无需要再用root用户了，而该用户的权限也只被限定在xoops数据库中。
如果你想进行远程访问或控制，那么你要做两件事：
其一：
mysql>GRANT ALL PRIVILEGES ON xoops.* TO xoops_root@\"%\" IDENTIFIED BY \"654321\";
允许xoops_root用户可以从任意机器上登入MySQL。
其二：
$sudo gedit /etc/mysql/my.cnf
老的版本中
>skip-networking => # skip-networking
新的版本中
>bind-address=127.0.0.1 => bind-address= 你机器的IP
这样就可以允许其他机器访问MySQL了。
 
3) mysql -h localhost -u root -p

mysql errors:

a) $ service mysqld
mysqld: unrecognized service

$ chkconfig --list mysql
mysql 0:off 1:off 2:off 3:off 4:off 5:off 6:off
$ chkconfig --list mysqld
mysqld: unknown service
$ whereis mysql
mysql: /usr/bin/mysql /etc/mysql /usr/lib/mysql /usr/bin/X11/mysql /usr/include/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz

4) stop/restart mysql:
   /etc/init.d/mysql stop/start/restart  or  service mysql stop/start/restart

#########################################

################## postgresql ################
1. install postgresql on ubuntu:
   sudo apt-get install postgresql

2. connect to postgres:
   sudo -u postgres psql postgres
   --> \\password
   ctrl-d to quit.

3. can only install postgresql-client to connect to a server:
   sudo apt-get install postgresql-client
   psql -h host-name-or-ip dbname user

-- postgres add user:
   su - postgres
   psql
   \\c template1
   grant all privileges on database policy to klzhong;
   create user klzhong with password '123456';        
   \\q

## postgres sql:
==> manage:
   \\list  //list databases
   \\dt    //list tables in current db.
   \\c db-name  // connect to a certain db.

   \\?   //help

   \\d+ tablename  // desc table.

==> create database(paperfare for example):
    step1. psql -h localhost postgres kzhong
    step2. CREATE DATABASE paperfare OWNER klzhong;
        ERROR:  permission denied to create database
    step3. grant user create database: relogin as admin user:
           psql -h localhost postgres postgres;
           ALTER USER klzhong CREATEDB;
           SET ROLE klzhong  //switch to user klzhong
    step4. exec step2.
    step5. \\l+

==> DDL:

==> DML:

--- Postgres on mac:
## use brew instead of port to install postgresql:
-- install brew first:
   sudo su
   curl -L http://github.com/mxcl/homebrew/tarball/master | tar xz --strip 1 -C /usr/local

   --> brew can not work with macport installed. uninstall all soft ware that installed by macport and remove macport.
   -- show installed software in macport: 
     port installed
	 
   -- remove all software installed by macports:
     sudo port -f uninstall installed
   -- remove macport files:

   ==> install postgresql with brew success.
       for help , use command: brew info postgres     

-- start postgresql on mac montain lion:
   --> sudo rm -rf /usr/local/var/postgres  // rm if exist.
       sudo mkdir /usr/local/var/postgres
       sudo chown klzhong /usr/local/var/postgres
       initdb /usr/local/var/postgres -E utf8
   --> pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

-- problem when run psql connect to postgresql server: 
   psql: could not connect to server: No such file or directory
   Is the server running locally and accepting
   connections on Unix domain socket \"/var/pgsql_socket/.s.PGSQL.5432\"?       
   --> resolve:
       pg_ctl -D /usr/local/var/postgres stop
       sudo mkdir /var/pg_socket
       sudo chown klzhong /var/pg_socket
       modify /usr/local/var/postgres/postgresql.conf:
              unix_socket_directory = '/var/pgsql_socket'
       pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start

   ==> use: psql postgres  connect to postgresql server.


##############################################


####### ORACLE 11 ########

-- three kind of authority in oracle: dba, user, all.

1. select oracle version via sql:
   select * from v$version;

2. show all schemas:
   select * from all_users;

3. show all tables in schema:
   select owner, object_name from all_objects where object_type='TABLE' and owner='schema-name';
########################## "]) t "db stuff" "2013-03-27T02:57:34Z" "2015-08-29T13:49:28Z" "https://gist.github.com/5251230.git" "https://gist.github.com/5251230.git" "https://gist.github.com/5251230" 0 unbound "5251230" "https://api.github.com/gists/5251230" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "emacs-stuff" 8711 "https://gist.githubusercontent.com/kongliangzhong/5251214/raw/7de022f61972e21883222adc3155ef0bcc9a60b0/emacs-stuff" "#### EMACS TIPS ####

### cscope: ###
;; * Keybindings:
;;
;; All keybindings use the \"C-c s\" prefix, but are usable only while
;; editing a source file, or in the cscope results buffer:
;;
;;      C-c s s         Find symbol.
;;      C-c s d         Find global definition.
;;      C-c s g         Find global definition (alternate binding).
;;      C-c s G         Find global definition without prompting.
;;      C-c s c         Find functions calling a function.
;;      C-c s C         Find called functions (list functions called
;;                      from a function).
;;      C-c s t         Find text string.
;;      C-c s e         Find egrep pattern.
;;      C-c s f         Find a file.
;;      C-c s i         Find files #including a file.
;;
;; These pertain to navigation through the search results:
;;
;;      C-c s b         Display *cscope* buffer.
;;      C-c s B         Auto display *cscope* buffer toggle.
;;      C-c s n         Next symbol.
;;      C-c s N         Next file.
;;      C-c s p         Previous symbol.
;;      C-c s P         Previous file.
;;      C-c s u         Pop mark.
;;
;; These pertain to setting and unsetting the variable,
;; `cscope-initial-directory', (location searched for the cscope database
;;  directory):
;;
;;      C-c s a         Set initial directory.
;;      C-c s A         Unset initial directory.
;;
;; These pertain to cscope database maintenance:
;;
;;      C-c s L         Create list of files to index.
;;      C-c s I         Create list and index.
;;      C-c s E         Edit list of files to index.
;;      C-c s W         Locate this buffer's cscope directory
;;                      (\"W\" --> \"where\").
;;      C-c s S         Locate this buffer's cscope directory.
;;                      (alternate binding: \"S\" --> \"show\").
;;      C-c s T         Locate this buffer's cscope directory.
;;                      (alternate binding: \"T\" --> \"tell\").
;;      C-c s D         Dired this buffer's directory.

##############

### Cursor Movement and Location ###

This reference guide lists the commands available within GNU Emacs for moving the cursor, and reporting its location. 
NOTICE - New forum for all UNIX learners, users and programmers - click here
 
arrow keys (if available)	       N/A	                Move cursor.
----------------------------------------------------------------------------------------------------------------------------
C-a	                               beginning-of-line	Move to beginning of line.
C-e	                               end-of-line	        Move to end of line.
C-f	                               forward-char	        Move forward one character.
C-b	                               backward-char	        Move backward one character.
M-f 	                               forward-word	        Move forward one word.
M-b	                               backward-word	        Move backward one word.
C-n	                               next-line	        Move down a line (creating the next line, if necessary).
C-p	                               previous-line	        Move up a line.
M-r	                               move-to-window-line	Move to left margin, vertically centered in window.
M-<	                               beginning-of-buffer	Move to top of buffer.
M->	                               end-of-buffer	        Move to end of buffer.
M-x goto-char	                       goto-char	        Read a number and go to that buffer position (start = 1).
M-x goto-line	                       goto-line	        Read a number and go to that line (first line = 1).
C-x C-n	                               set-goal-column	        Set current column as 'goal column'.  From then on, the C-n and C-p commands jump to that column, 
                                                                or the nearest possible column.
C-u C-x C-n	                       N/A	                Cancel the 'goal column', and return to normal behaviour.
M-x what-page	                       what-page	        Display page number and line number (within page) of cursor location.
M-x what-line	                       what-line	        Display line number (within buffer) of cursor location.
M-x line-number-mode	               line-number-mode	        Display line number automatically (toggle).
M-=	                               count-lines-region	Print number of lines in current region.
C-x =	                               what-cursor-postition	Print character code, character position and column of the cursor location.

C-x C-@                          goto-previous-position       goto previous position

## scroll other window:
use M-PageUp (M-Prior) / M-PageDown 
or command: M-x scroll-other-window

#################################### 

### Emacs Basic Tips:
 
## In xemacs, you can use C-SPC to set-mark-start, but in terminal, this key stroke is used for switching languages, so use C-@ instaed. 
## in order to startup emacs quicker, use emacs -q -nw , will not load user's init file for emacs.

### common lisp samples:
## (remove-if-not #'evenp '(1 2 3 4 5 6 7 8 9 10))
   (remove-if-not #'(lambda (x) (= 0 (mod x 2))) '(1 2 3 4 5 6 7 8 9 10))

### Emacs基础：文本删除、复制和恢复
delete-char (C-d)
delete-backward-char (DEL)
kill-word (M-d)
backward-kill-word (M-DEL)
kill-line (C-k)
kill-sentence (M-k)
backward-kill-sentence (C-x DEL)
yank (C-y) -- paste
yank-pop (M-y)
kill-region (C-w) -- cut
kill-paragraph
backward-kill-paragraph
kill-ring-save (M-w) -- copy

### 扩展
If mark active, copy region. Otherwise, copy current line.
(defun new-kill-ring-save (&optional m)
(interactive \"p\")
(if mark-active
(kill-ring-save (region-beginning) (region-end))
(if (> n 0)
(kill-ring-save (line-beginning-position) (line-end-position n))
(kill-ring-save (line-beginning-position n) (line-end-position)))))
 
## copy current line
(defun copy-line (&optional arg)
(interactive \"p\")
(let ((beg (line-beginning-position))
(end (line-end-position arg)))
(copy-region-as-kill beg end)))
 
## copy words at point
(defun copy-word (&optional arg)
(interactive \"p\")
(let ((beg (progn (if (looking-back \"[a-zA-Z0-9]\" 1) (backward-word 1)) (point)))
(end (progn (forward-word arg) (point))))
(copy-region-as-kill beg end)))
 
## copy paragraphes at point
(defun copy-paragraph (&optional arg)
(interactive \"p\")
(let ((beg (progn (backward-paragraph 1) (point)))
(end (progn (forward-paragraph arg) (point))))
(copy-region-as-kill beg end)))

insert file to curr buffer: C-x i

## format region:
C-M-\\
e.g. C-x h C-M-\\

## compile *.el to *.elc
emacs -batch -f batch-byte-compile *.el

## remoce ^M in file: 
M-x replace-string C-q C-m Ret Ret

## grep-find exclue .svn directories:
(global-set-key [f3] 'grep-find)
(setq grep-find-command
\"find . -path '*/.svn' -prune -o -type f -print | xargs -e grep -I -n -e \")

## open file use sudo in emacs:
C-x C-f /sudo::/etc/hosts

## reload .emacs while emacs still running:
M-x load-file ENTER

## emacs term
use term in emacs: M-x term
note: key bindings change: use C-c instead of C-x when your curr buffer is the term. typically, if you want to terminate a process in the terminal, type: C-c C-c, if you want to change buffer, use C-c b instead of C-x b.

## search curr word: C-s w

## comment/uncomment in java mode: C-c C-c / C-u C-c C-c

## use emacs daemon:
-- emacs --daemon
use emacsclient:
-- emacsclient -t  // open in terminal
-- emacsclient -c  // open GUI emacs window

you can define the following alias for convenience:
-- alias et='emacsclient -t'
-- alias ec='emacsclient -c'

## find a file without know exact directory:
   M-x find-name-dired

## emacs shells:
-- M-x shell
-- M-x term  // the best. use C-C instead of C-x in this buffer.
-- M-x eshell

## replace in multi files:
  1) M-x find-name-dired: you will be prompted for a root directory and a filename pattern.
  2) Press t to \"toggle mark\" for all files found.
  3) Press Q for \"Query-Replace in Files...\": you will be prompted for query/substitution regexps.
  4) Proceed as with query-replace-regexp: SPACE to replace and move to next match, n to skip a match, etc.


############## EMACS JAVA TIPS ################

-- find class definition in project:
   --> for jdk class, just search in jdk source dir.
   --> for third party jars, use find-grep on top of dependency jars directory.
       e.g. for gradle, use gradle zip to collect all the dependencies in 
       target/distribution directory, unzip and then use find-grep on this dir.

###############################################

# delete upto non-whitespace character, or join multiple lines to one:
   M-^  // M-x delete-indentation

## to make sure two words are seprated by just one space: M-SPACE"]) t "emacs tips" "2013-03-27T02:54:27Z" "2015-08-29T13:49:28Z" "https://gist.github.com/5251214.git" "https://gist.github.com/5251214.git" "https://gist.github.com/5251214" 0 unbound "5251214" "https://api.github.com/gists/5251214" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "linux-stuff" 4327 "https://gist.githubusercontent.com/kongliangzhong/5251195/raw/63ef96c3a49e09034b2cbc295c46e7a797932f90/linux-stuff" "######### ubuntu linux #########
1) host file:
 
127.0.0.1	localhost
127.0.1.1       zhongkongliang-desktop
 
# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
 
2) bash:
  a) check exit code and exit. use if statement:
     if [ $? -ne 0 ]; then  ## notice the space between [ and $ .
       exit 1
     fi
 
3) display linux system info:  uname -a

4) E: Unmet dependencies:
   use:  sudo apt-get --purge autoremove -f to remove uncomplete packages or reinstall them.


### System Manage:
 
1) find where a pakage is installed:
    dpkg -l |grep name
    dpkg -s pkgName
 
2) query package: rpm -q <pkg-name>
 
3) install rpm pakage in ubuntu:
   try  rpm  -ivh  my-pkg.rpm  and get the following error msg:
   RPM should not be used directly install RPM packages, use Alien instead
   so:
   sudo apt-get install alien
   sudo alien my-pkg.rpm
   sudo -i my-pkg.deb
 
4) manage jobs:
   \"Ctrl-z\" : suspend running task
    jobs: list background jobs.
    fg: make background job running in frontground.  e.g. fg %1
    bg: background job.
    kill background job:  kill %1    , num 1 is the num in the jobs list.

5) search software: e.g.
   sudo apt-cache search jdk

   show package info: sudo apt-cache show pkg-name

################################


######## Mac OS: ########
1) install port:
  a) sudo port -d selfupdate
 
  install some pkgs using port:
  b) sudo port install iterm2
  c) sudo port install tree  // the tree command on linux.
  
 
2) use port to install emacs:
  $ sudo port install emacs
  Or, if you want the Aqua version:
  $ sudo port install emacs-app
  To keep it up to date:
  $ sudo port -u upgrade emacs
 
3) macos emacs:  esc+x = M-x
######################### 

############# Shell commands: ##############
1) unzip -l : list the contents of a zip archive. e.g.
      unzip -l maven-hello-world-portlet.zip 
   similar as: tar -tf  and  jar -tf
 
2) find exclude directory:
   find /path/to/dest -type d \\( ! -name tmp \\) -o \\( ! -name cache -prune \\) -print  ## The -prune option make sure that you do not descend into directory
 
3) delete all directories under curr-directory except ROOT :
   find .  -maxdepth 1 -type d \\( ! -name \"ROOT\" \\) -print0 | xargs -0 rm -rf
 
4) sudo sh : get root shell.

5) replace one char in filename for all matched files:
   find . -name \"*-*\" -exec bash -c 'mv \"$1\" \"${1//-/_}\"' _ {} \\;
   ## replace word in file name:
   find . -name \"*.html\" -exec bash -c 'mv \"$1\" \"${1//html/scala.html}\"' _ {} \\;   
 
6) delete all .svn directories recursively:
   find . -type d -name \".svn\" exec rm -rf {} \\;

7) execute a line of commands with one sudo: sudo sh -c  ??
   e.g.  sudo sh -c \"echo 2 >> /data/zookeeper/myid\"

8) count occurrences of a char in a text file:
   fgrep -o <xxx> <file> |wc -l

### locale:
can not write and view chinese character in terminal. locale -l, not find zh_CN.UTF-8

1) sudo locale-gen zh_CN.UTF-8
2) echo \"export LC_ALL=zh_CN.UTF-8\" >> ~/.bashrc
3) restart terminal
4) use LC_ALL=C.UTF-8 can work too. but LC_ALL=C will not work.

key point: if locale -l not have zh_CN.UTF-8, then generate one.

upgrade ubuntu failed:
run these commands in terminal:
sudo apt-get update
sudo apt-get upgrade

find . -type f -print0 | \"xargs\" -0 -e grep -nH -e

-- show linux version: 
   uname -a

-- show distribution info:
   lsb_release -a

-- count disk usage in curr dir:
   du -hs .

-- find a command on shell:
   --> which cmd
   --> alias -p | grep cmd

### PROCESS SUPERVISION:
1) via supervisord :
   supervisorctl

   supervisord will auto load all *.conf file in /etc/supervisor/conf.d/*.conf
   (configured in /etc/supervisor/supervisord.conf, see the files section)

   supervisor conf example:
      [program:nodehook]
      command=/usr/bin/node /srv/http.js
      directory=/srv
      autostart=true
      autorestart=true
      startretries=3
      stderr_logfile=/var/log/webhook/nodehook.err.log
      stdout_logfile=/var/log/webhook/nodehook.out.log
      user=root
      environment=SECRET_PASSPHRASE='this is secret',SECRET_TWO='another secret'

   run: sudo supervisorctl update to load new conf file.

############################################ 


"]) t "linux-stuff" "2013-03-27T02:50:40Z" "2015-05-25T09:22:26Z" "https://gist.github.com/5251195.git" "https://gist.github.com/5251195.git" "https://gist.github.com/5251195" 0 unbound "5251195" "https://api.github.com/gists/5251195" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "personal-private-conf-info" 1319 "https://gist.githubusercontent.com/kongliangzhong/3fb990e3f969d99d9566/raw/acf968f07f3e0897db30770f3aa50be714dd5727/personal-private-conf-info" "钟孔龙信息：
广州市黄埔区东圃镇车陂村东湖塘新村18号103
18027165166
13527805498

妈妈：
13047130023

舅舅：
15271155838

kongliangzhong@hotmail.com
Yrwin82013

1) yunrang 上海机房 新密码：  
  http://10.21.114.3/hope/index.php?r=user/profile/changePassword  |  YrKlzPwd;01
 
  new password: B3v5w6r7;

2) github pwd:
   kongliangzhong@gmail.com
   

--------- config info in travelzen.com -----------
shmail1.travelzen.com [kongliang.zhong/b3v5w6r7]
oa.travelzen.com [zhongkl/kongque]

user jboss on my pc: jboss/jboss

---- qq account settings.
     
----
### accounts ###
1) evernote: kongliangzhong@gmail.com/Kongque2013!

2) bc : kongliangzhong@gmail.com/~B3v5w6r7#!

3) zhifb: 15902195002/~B3v5w6r7@!/#KlzPwdAli2013!

4) apple: zkl_1011@126.com/kongque

5) ceb: /b3v5w6r7

6) huobi: kongliangzhong@gmail.com/B3v5w6r7!

7) protoshare-enc-pwd: @Klz2013!ProtoSharePwd#

8) www.net.cn  zkl_1011@126.com/Kongque

9) stackoverflow: kongliangzhong@gmail.com/B3v5w6r7

10) jd.com zkl_1011@126.com/B3v5w6r7

11) heroku: kongliangzhong@gmail.com/kongque831011

12) shanghai gongjijin(www.shgjj.com): zhongkl/kongque

13) linkedin: zkl_1011@126.com/kongque

14) gongshang-yh: ****2230/@B3v5w6r7~
    yuliuixinxi: zhongkl_icbc_2230

15) swiftype: zkl_1011@126.com/kongque

################"]) :json-false "personal private info " "2013-03-27T02:46:44Z" "2015-05-25T03:39:41Z" "https://gist.github.com/3fb990e3f969d99d9566.git" "https://gist.github.com/3fb990e3f969d99d9566.git" "https://gist.github.com/3fb990e3f969d99d9566" 0 unbound "3fb990e3f969d99d9566" "https://api.github.com/gists/3fb990e3f969d99d9566" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "temp-text" 12366 "https://gist.githubusercontent.com/kongliangzhong/5251142/raw/9df6fb36d375076d2faa3651a5d0a393b9fdaf79/temp-text" nil]) t "stractch text" "2013-03-27T02:40:51Z" "2013-10-29T14:05:42Z" "https://gist.github.com/5251142.git" "https://gist.github.com/5251142.git" "https://gist.github.com/5251142" 0 unbound "5251142" "https://api.github.com/gists/5251142" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "windows-phone-8-and-C#" 1370 "https://gist.githubusercontent.com/kongliangzhong/5251129/raw/686da46d060d379499a3269002958d035271480d/windows-phone-8-and-C%23" nil]) t "windows phone 8 dev in c#" "2013-03-27T02:38:48Z" "2013-03-27T02:38:49Z" "https://gist.github.com/5251129.git" "https://gist.github.com/5251129.git" "https://gist.github.com/5251129" 0 unbound "5251129" "https://api.github.com/gists/5251129" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "work-log-in-emacs" 277 "https://gist.githubusercontent.com/kongliangzhong/34ac8c2edb63935128c4/raw/e7a7ed12b0dec999fb35cede03795bc3797bcbc4/work-log-in-emacs" nil]) nil "new work log in emacs" "2013-03-27T02:14:07Z" "2013-06-04T10:56:49Z" "https://gist.github.com/34ac8c2edb63935128c4.git" "https://gist.github.com/34ac8c2edb63935128c4.git" "https://gist.github.com/34ac8c2edb63935128c4" 0 unbound "34ac8c2edb63935128c4" "https://api.github.com/gists/34ac8c2edb63935128c4" nil nil] [object gh-gist-gist "gh-gist-gist" ([object gh-gist-gist-file "gh-gist-gist-file" "scala-java-clojure-etc" 7328 "https://gist.githubusercontent.com/kongliangzhong/2802797/raw/ab4052c8da6e488daee88d745beaecf900a8e8db/scala-java-clojure-etc" "##### SCALA LANGUAGE #####

1) Can someone tell me why this does not work?

case class XY(enum: MyEnum)

object MyEnum extends Enumeration {
  val OP1, OP2 = Value 
}
Error: not found: type MyEnum

answer:
This is because MyEnum is an object and objects are singletons. 
It's not possible to pass singletons as arguments to case classes, 
because that would impose there is more than one instance of this object.

If you want to pass a value of MyEnum (i.e. an enumeration value) use MyEnum.Value:

case class XY(enum: MyEnum.Value)

object MyEnum extends Enumeration { val OP1, OP2 = Value }
After that you can use MyEnum as expected:

val x = XY(MyEnum.OP1)
By the way: A common pattern is to define a type alias, 
so you can tweak the code a little bit (i.e. use MyEnum instead of MyEnum.Value and OP1 instead of MyEnum.OP1):

object MyEnum extends Enumeration {
  type MyEnum = Value
  val OP1, OP2 = Value
}

import MyEnum._

case class XY(enum: MyEnum)

class C {
  val x = XY(OP1)
}

2) file read&write
read:
Source.fromFile(fileName).getLines
write:
val out = new java.io.PrintWriter(new java.io.File(fileName))
try { out.print(content) } finally {out.close()}

###########################

##### JAVA LANGUAGE BASIC #####
## java package:
    java包命名机制：在SystemClassLoader中会对java的包命名有校验，对于以java.开头的用户自定义类，会抛出异常。其他的没有限制。
    另外，java编译时对源文件的存放位置并没有做要求，因此，你可以将package javax的源文件放在com.XXX.XX.test包下，但是编译后class文件会在javax目录下。
    但是将源文件放在相应的目录下显然是很好的代码组织方式。

## java native2ascii
   escape properties file: // utf-8 is the charset of properties file.
   native2ascii -encoding utf-8 source.properties dest.properties   		  

## Class.getResourceAsStream and ClassLoader.getResourceAsStream compare:
   Class.getResource can take a \"relative\" resource name, which is treated relative to the class's package. Alternatively you can specify an \"absolute\" resource name by using a leading slash. Classloader resource paths are always deemed to be absolute.
   So there are basically equivalent:
      foo.bar.Baz.class.getResource(\"xyz.txt\");
      foo.bar.Baz.class.getClassLoader().getResource(\"foo/bar/xyz.txt\");
   And so are these (but they're different to the above :)
       foo.bar.Baz.class.getResource(\"/data/xyz.txt\");
       foo.bar.Baz.class.getClassLoader().getResource(\"data/xyz.txt\");

## show java defualt flags:
   java -XX:+PrintFlagsFinal -version
   Look for the options MaxHeapSize (for -Xmx) and InitialHeapSize for -Xms:
   java -XX:+PrintFlagsFinal -version | grep HeapSize
   
###############################


##### CLOJURE LANGUAGE STUFF #####

### language basics

-- def/deref
  (def visitors (atom #{}))
  (swap! visitors conj \"Jack\")
  (deref visitors) / @visitors

-- require/use
  (require 'examples.introduction)
  (take 10 examples.introdunction/fibs)
  (refer 'examples.introducntion)
  (take 10 fibs)

  (use 'examples.introduction)
  (take 10 fibs)

  (use :reload 'examples.introduction)

-- apply
   (str (interleave \"1234\" \"abcd\"))
   (apply str (interleave \"1234\" \"abcd\"))
   (apply str (take-nth 2 \"1a2b3c4d\"))

-- map
   (def inventors {\"Lisp\" \"McCarthy\", \"Clojure\" \"Hickey\"})
   (inventors \"Lisp\")
   (get inventors \"Lisp\" \"default\")
   
   ;; use keyword:
   (def inventors {:Lisp \"McCarthy\", :Clojure \"Hickey\"})

-- record
   (defrecord Book [title author])
   (->Book \"Effective Java\" \"Joshua Bloch\")
   (Book. \"Effective Java\" \"Joshua Bloch\")
   (#user.Book{:title \"Effective Java\", :author \"Joshua Bloch\"})

-- functions
   (defn name doc-string? attr-map? 
     ([params*] body)+)

   -- &
   define any number of optional params after &. 
   (defn date [person-1 person-2 & chaperones]
   	 (println person-1 \"and\" person-2 
             \"went out with\" (count chaperones) \"chaperones.\"))

-- anonymous-functions
   (fn [params*] body)

   (defn indexale-word? [word]
   	 (> (count word) 2))

   (filter indexale-word? (str/split \"A fine day it is\" #\"\\W+\"))
   (filter (fn [x] (> (count x) 2)) (str/split \"A fine day it is\" #\"\\W+\"))
   (filter #(> (count %) 2) (str/split \"A fine day it is\" #\"\\W+\"))

   (defn indexale-words [text]
     (let [indexale-word? (fn [w] (> (count w) 2))]
       (filter indexale-word? (str/split text #\"\\W+\"))))

## variant, bindings and namespace
-- var
   (var foo)
   #'foo

-- bindings
   (let [bindings*] exprs*)
   (let [[_ _ z] [1 2 3]]
     z)
   (let [top (+ bottom size)
   		 right (+ left size)]
	 [[bottom left] [top left] [top right] [bottom right]]))

-- namespace
   (reslove 'foo)
   (in-ns 'user)

   (ns name& references)
   (ns demo.core
     (:require [clojure.string :as str])
	 (:import (java.io File InputStream))
   )

## condition and loop clause
-- if
  (defn is-small? [num]
    (if (< num 100) \"yes\" 
      (do 
        (println \"saw a big number\" num)
        \"no\")))

-- loop/recur


### seqs

## first/rest/cons
   (first aseq)
   (rest aseq)
   (cons elem aseq)

   (seq coll)
   (next aseq) == (seq(rest aseq))

   (class sym)

   coll: #{:a :b :c}

   (sorted-set& elements)
   (sorted-map& elements)

   (conj coll element & elements)
   (into to-coll from-coll)

## create seqs
   (range start? end step?)
   (repeat n x)
   (iterate f n)  ;; (iterate inc 1)
   (take n sequence)
   (cycle coll)
   (interleave& colls)
   (interpose separator coll)

   (apply str (interpose separator coll)) == (clojure.string/join separator coll)
   (use '[clojure.string :only (join)])

   (list & elements)
   (vector & elements)
   (hash-set & elements)
   (hash-map key-1 value-1 ...)

   (set coll)
   (vec coll)

## filter seqs
-- filter
   (filter pred coll)
   (take 10 (filter even? (iterate inc 1)))

-- take-while/drop-while
   (take-while pred coll)
   (take-while (complement #{\\a\\e\\i\\o\\u}) \"the-quick-brown-fox\")
   
-- split-at/split-with
   (split-at index coll)
   (split-with pred coll)

## seqs pred
-- every?
   (every? pred coll)
   (every? odd? [1 3 5])

-- some
   (some pred coll)

-- not-every?/not-any?
   (not-every? pred coll)
   (not-any? pred coll)

## transform seqs
-- map
   (map f coll)
   (map #(format \"<%s>%s<%s>\" %1 %2 %1) [h1 h2 h3 h1] '(\"the\" \"quick\" \"brown\" \"fox\"))

-- reduce
   (reduce f coll)

-- sort/sort-by
   (sort comp? coll)
   (sort-by a-fn comp? coll)

-- for
   (for [binding-form coll-expr filter-expr? ...] expr)
   (take 10 (for [n (iterate inc 1) :when (even? n)] n))
   (for [n (iterate inc 1) :while (even? n)] n)
   (for [file \"ABCDEFGH\" rank (range 1 9)] (format \"%c%d\" file rank))

## use java collections as seqs

## regex
-- re-matcher/re-find
   (let [m (re-matcher #\"\\w+\" \"the quick brown fox\")]
     (loop [match (re-find m)]
	   (when match
	     (println match)
		 (recur (re-find m)))))

-- re-seq
   (re-seq regexp string)
   (re-seq #\"\\w+\" \"the quick brown fox\")   

## io
-- reader
   (use '[clojure.java.io :only (reader)])
   (with-open [rdr (reader \"src/demo/core.clj\")]   
     (count (filter #(re-find #\"\\S\" %) (line-seq rdr)))

-- xml-seq
   (use '[clojure.xml :only (parse)])
   (xml-seq (parse (java.io.File. \"src/demo/temp.xml\")))
      
### Functional Programming

##################################"]) t "jvm base langs stuff" "2012-05-27T08:10:05Z" "2015-08-29T13:45:11Z" "https://gist.github.com/2802797.git" "https://gist.github.com/2802797.git" "https://gist.github.com/2802797" 0 unbound "2802797" "https://api.github.com/gists/2802797" nil nil]) "W/\"69ca367a9c71b96da052669863ba7d99\"" nil]))
  :timestamp 1445495049.254866)
